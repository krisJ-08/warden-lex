Lexeme: fn	Token: KEYWORD_FUNCTION	LineNo: 1
Lexeme: main	Token: RESWORD_MAIN	LineNo: 1
Lexeme: (	Token: LPAREN	LineNo: 1
Lexeme: )	Token: RPAREN	LineNo: 1
Lexeme: {	Token: LBRACE	LineNo: 1
Lexeme: var	Token: KEYWORD_VAR	LineNo: 2
Lexeme: a	Token: ID	LineNo: 2
Lexeme: int	Token: KEYWORD_INT	LineNo: 2
Lexeme: =	Token: ASSIGN	LineNo: 2
Lexeme: 69	Token: ICONST	LineNo: 2
Lexeme: ;	Token: SEMI	LineNo: 2
Lexeme: var	Token: KEYWORD_VAR	LineNo: 3
Lexeme: b	Token: ID	LineNo: 3
Lexeme: integer	Token: KEYWORD_INT	LineNo: 3
Lexeme: =	Token: ASSIGN	LineNo: 3
Lexeme: 420	Token: ICONST	LineNo: 3
Lexeme: var	Token: KEYWORD_VAR	LineNo: 4
Lexeme: dec	Token: ID	LineNo: 4
Lexeme: single	Token: KEYWORD_SINGLE	LineNo: 4
Lexeme: =	Token: ASSIGN	LineNo: 4
Lexeme: 44.78	Token: FCONST	LineNo: 4
Lexeme: ;	Token: SEMI	LineNo: 4
Lexeme: var	Token: KEYWORD_VAR	LineNo: 5
Lexeme: ttl	Token: ID	LineNo: 5
Lexeme: single	Token: KEYWORD_SINGLE	LineNo: 5
Lexeme: =	Token: ASSIGN	LineNo: 5
Lexeme: 0.0	Token: FCONST	LineNo: 5
Lexeme: ;	Token: SEMI	LineNo: 5
Lexeme: var	Token: KEYWORD_VAR	LineNo: 6
Lexeme: ltr	Token: ID	LineNo: 6
Lexeme: char	Token: KEYWORD_CHAR	LineNo: 6
Lexeme: =	Token: ASSIGN	LineNo: 6
Lexeme: 'g'	Token: CCONST	LineNo: 6
Lexeme: ;	Token: SEMI	LineNo: 6
Lexeme: var	Token: KEYWORD_VAR	LineNo: 7
Lexeme: boss	Token: ID	LineNo: 7
Lexeme: string	Token: KEYWORD_STRING	LineNo: 7
Lexeme: =	Token: ASSIGN	LineNo: 7
Lexeme: "bossman"	Token: STRING	LineNo: 7
Lexeme: var	Token: KEYWORD_VAR	LineNo: 8
Lexeme: int	Token: KEYWORD_INT	LineNo: 8
Lexeme: arr[]	Token: ARRAY	LineNo: 8
Lexeme: =	Token: ASSIGN	LineNo: 8
Lexeme: {	Token: LBRACE	LineNo: 8
Lexeme: 1	Token: ICONST	LineNo: 8
Lexeme: ,	Token: COMMA	LineNo: 8
Lexeme: 2	Token: ICONST	LineNo: 8
Lexeme: ,	Token: COMMA	LineNo: 8
Lexeme: 3	Token: ICONST	LineNo: 8
Lexeme: ,	Token: COMMA	LineNo: 8
Lexeme: 4	Token: ICONST	LineNo: 8
Lexeme: ,	Token: COMMA	LineNo: 8
Lexeme: 5	Token: ICONST	LineNo: 8
Lexeme: ,	Token: COMMA	LineNo: 8
Lexeme: 6	Token: ICONST	LineNo: 8
Lexeme: ,	Token: COMMA	LineNo: 8
Lexeme: 7	Token: ICONST	LineNo: 8
Lexeme: ,	Token: COMMA	LineNo: 8
Lexeme: 8	Token: ICONST	LineNo: 8
Lexeme: }	Token: RBRACE	LineNo: 8
Lexeme: ;	Token: SEMI	LineNo: 8
Lexeme: var	Token: KEYWORD_VAR	LineNo: 9
Lexeme: isCorrect	Token: ID	LineNo: 9
Lexeme: bool	Token: KEYWORD_BOOL	LineNo: 9
Lexeme: =	Token: ASSIGN	LineNo: 9
Lexeme: false	Token: RESWORD_FALSE	LineNo: 9
Lexeme: ;	Token: SEMI	LineNo: 9
Lexeme: var	Token: KEYWORD_VAR	LineNo: 10
Lexeme: isWrong	Token: ID	LineNo: 10
Lexeme: boolean	Token: KEYWORD_BOOL	LineNo: 10
Lexeme: =	Token: ASSIGN	LineNo: 10
Lexeme: true	Token: RESWORD_TRUE	LineNo: 10
Lexeme: ;	Token: SEMI	LineNo: 10
Line is commented at line 11
Error: "INVALID" in line 12. Lexeme = \
Lexeme: t	Token: ID	LineNo: 12
Start of comment from line 14
Ends to line 19
Line is commented at line 20
Lexeme: for	Token: KEYWORD_FOR	LineNo: 22
Lexeme: (	Token: LPAREN	LineNo: 22
Lexeme: var	Token: KEYWORD_VAR	LineNo: 22
Lexeme: i	Token: ID	LineNo: 22
Lexeme: int	Token: KEYWORD_INT	LineNo: 22
Lexeme: =	Token: ASSIGN	LineNo: 22
Lexeme: 0	Token: ICONST	LineNo: 22
Lexeme: ;	Token: SEMI	LineNo: 22
Lexeme: 8	Token: ICONST	LineNo: 22
Lexeme: >	Token: GTHANOP	LineNo: 22
Lexeme: i	Token: ID	LineNo: 22
Lexeme: ;	Token: SEMI	LineNo: 22
Lexeme: i	Token: ID	LineNo: 22
Lexeme: ++	Token: IINCROP	LineNo: 22
Lexeme: )	Token: RPAREN	LineNo: 22
Lexeme: {	Token: LBRACE	LineNo: 23
Lexeme: ttl	Token: ID	LineNo: 25
Lexeme: =	Token: ASSIGN	LineNo: 25
Lexeme: a	Token: ID	LineNo: 25
Lexeme: +	Token: MINOP	LineNo: 25
Lexeme: i	Token: ID	LineNo: 25
Lexeme: ;	Token: SEMI	LineNo: 25
Lexeme: ttl	Token: ID	LineNo: 26
Lexeme: =	Token: ASSIGN	LineNo: 26
Lexeme: b	Token: ID	LineNo: 26
Lexeme: -	Token: ADDOP	LineNo: 26
Lexeme: i	Token: ID	LineNo: 26
Lexeme: ;	Token: SEMI	LineNo: 26
Lexeme: ttl	Token: ID	LineNo: 27
Lexeme: =	Token: ASSIGN	LineNo: 27
Lexeme: ttl	Token: ID	LineNo: 27
Lexeme: *	Token: MULOP	LineNo: 27
Lexeme: b	Token: ID	LineNo: 27
Lexeme: ;	Token: SEMI	LineNo: 27
Lexeme: ttl	Token: ID	LineNo: 28
Lexeme: =	Token: ASSIGN	LineNo: 28
Lexeme: a	Token: ID	LineNo: 28
Lexeme: /	Token: DIVOP	LineNo: 28
Lexeme: ttl	Token: ID	LineNo: 28
Lexeme: ;	Token: SEMI	LineNo: 28
Lexeme: ttl	Token: ID	LineNo: 29
Lexeme: =	Token: ASSIGN	LineNo: 29
Lexeme: a	Token: ID	LineNo: 29
Lexeme: %	Token: MODOP	LineNo: 29
Lexeme: i	Token: ID	LineNo: 29
Lexeme: ;	Token: SEMI	LineNo: 29
Lexeme: b	Token: ID	LineNo: 30
Lexeme: --	Token: DINCROP	LineNo: 30
Lexeme: ;	Token: SEMI	LineNo: 30
Lexeme: ttl	Token: ID	LineNo: 31
Lexeme: =	Token: ASSIGN	LineNo: 31
Lexeme: 2	Token: ICONST	LineNo: 31
Lexeme: *	Token: MULOP	LineNo: 31
Lexeme: i	Token: ID	LineNo: 31
Lexeme: **	Token: EXPOP	LineNo: 31
Lexeme: 2	Token: ICONST	LineNo: 31
Lexeme: ;	Token: SEMI	LineNo: 31
Lexeme: }	Token: RBRACE	LineNo: 32
Lexeme: var	Token: KEYWORD_VAR	LineNo: 34
Lexeme: NUM	Token: ID	LineNo: 34
Lexeme: int	Token: KEYWORD_INT	LineNo: 34
Lexeme: =	Token: ASSIGN	LineNo: 34
Lexeme: 15	Token: ICONST	LineNo: 34
Lexeme: ;	Token: SEMI	LineNo: 34
Lexeme: set	Token: ID	LineNo: 36
Lexeme: (	Token: LPAREN	LineNo: 36
Lexeme: NUM	Token: ID	LineNo: 36
Lexeme: )	Token: RPAREN	LineNo: 36
Lexeme: ;	Token: SEMI	LineNo: 36
Lexeme: return	Token: KEYWORD_RETURN	LineNo: 38
Lexeme: 0	Token: ICONST	LineNo: 38
Lexeme: ;	Token: SEMI	LineNo: 38
Lexeme: }	Token: RBRACE	LineNo: 39
Lexeme: fn	Token: KEYWORD_FUNCTION	LineNo: 41
Lexeme: set	Token: ID	LineNo: 41
Lexeme: (	Token: LPAREN	LineNo: 41
Lexeme: num	Token: ID	LineNo: 41
Error: "INVALID" in line 41. Lexeme = :
Lexeme: int	Token: KEYWORD_INT	LineNo: 41
Lexeme: )	Token: RPAREN	LineNo: 41
Lexeme: {	Token: LBRACE	LineNo: 41
Lexeme: var	Token: KEYWORD_VAR	LineNo: 42
Lexeme: i	Token: ID	LineNo: 42
Lexeme: int	Token: KEYWORD_INT	LineNo: 42
Lexeme: =	Token: ASSIGN	LineNo: 42
Lexeme: 0	Token: ICONST	LineNo: 42
Lexeme: ;	Token: SEMI	LineNo: 42
Lexeme: dotimes	Token: KEYWORD_DOTIMES	LineNo: 43
Lexeme: (	Token: LPAREN	LineNo: 43
Lexeme: i	Token: ID	LineNo: 43
Lexeme: num	Token: ID	LineNo: 43
Lexeme: )	Token: RPAREN	LineNo: 43
Lexeme: {	Token: LBRACE	LineNo: 43
Lexeme: if	Token: KEYWORD_IF	LineNo: 44
Lexeme: (	Token: LPAREN	LineNo: 44
Lexeme: i	Token: ID	LineNo: 44
Lexeme: <	Token: LTHANOP	LineNo: 44
Lexeme: 5	Token: ICONST	LineNo: 44
Lexeme: ||	Token: OROP	LineNo: 44
Lexeme: i	Token: ID	LineNo: 44
Lexeme: >	Token: GTHANOP	LineNo: 44
Lexeme: 10	Token: ICONST	LineNo: 44
Lexeme: )	Token: RPAREN	LineNo: 44
Lexeme: {	Token: LBRACE	LineNo: 44
Lexeme: print	Token: ID	LineNo: 45
Lexeme: (	Token: LPAREN	LineNo: 45
Lexeme: "First set: $i"	Token: STRING	LineNo: 45
Lexeme: )	Token: RPAREN	LineNo: 45
Lexeme: ;	Token: SEMI	LineNo: 45
Lexeme: }	Token: RBRACE	LineNo: 46
Lexeme: else	Token: KEYWORD_ELSE	LineNo: 47
Lexeme: {	Token: LBRACE	LineNo: 47
Lexeme: print	Token: ID	LineNo: 48
Lexeme: (	Token: LPAREN	LineNo: 48
Lexeme: "Second set: $i"	Token: STRING	LineNo: 48
Lexeme: )	Token: RPAREN	LineNo: 48
Lexeme: }	Token: RBRACE	LineNo: 49
Lexeme: }	Token: RBRACE	LineNo: 50
Lexeme: }	Token: RBRACE	LineNo: 51



Total Tokens = 192