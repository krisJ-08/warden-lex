LineNo: 1			Lexeme: fn				Token: KEYWORD_FUNCTION
LineNo: 1			Lexeme: main				Token: RESWORD_MAIN
LineNo: 1			Lexeme: (				Token: LPAREN
LineNo: 1			Lexeme: )				Token: RPAREN
LineNo: 1			Lexeme: {				Token: LBRACEDEM
LineNo: 2			Lexeme: var				Token: KEYWORD_VAR
LineNo: 2			Lexeme: a				Token: ID
LineNo: 2			Lexeme: int				Token: KEYWORD_INT
LineNo: 2			Lexeme: =				Token: ASSIGN
LineNo: 2			Lexeme: 69				Token: ICONST
LineNo: 2			Lexeme: ;				Token: SEMIDEM
LineNo: 3			Lexeme: var				Token: KEYWORD_VAR
LineNo: 3			Lexeme: b				Token: ID
LineNo: 3			Lexeme: integer				Token: KEYWORD_INT
LineNo: 3			Lexeme: =				Token: ASSIGN
LineNo: 3			Lexeme: 420				Token: ICONST
LineNo: 3			Lexeme: ;				Token: SEMIDEM
LineNo: 4			Lexeme: var				Token: KEYWORD_VAR
LineNo: 4			Lexeme: _test				Token: INVALID IDENTIFIER
LineNo: 4			Lexeme: int				Token: KEYWORD_INT
LineNo: 4			Lexeme: ;				Token: SEMIDEM
LineNo: 5			Lexeme: var				Token: KEYWORD_VAR
LineNo: 5			Lexeme: dec				Token: ID
LineNo: 5			Lexeme: single				Token: KEYWORD_SINGLE
LineNo: 5			Lexeme: =				Token: ASSIGN
LineNo: 5			Lexeme: 44.78				Token: FCONST
LineNo: 5			Lexeme: ;				Token: SEMIDEM
LineNo: 6			Lexeme: var				Token: KEYWORD_VAR
LineNo: 6			Lexeme: ttl				Token: ID
LineNo: 6			Lexeme: single				Token: KEYWORD_SINGLE
LineNo: 6			Lexeme: =				Token: ASSIGN
LineNo: 6			Lexeme: 0.0				Token: FCONST
LineNo: 6			Lexeme: ;				Token: SEMIDEM
LineNo: 7			Lexeme: var				Token: KEYWORD_VAR
LineNo: 7			Lexeme: ltr				Token: ID
LineNo: 7			Lexeme: char				Token: KEYWORD_CHAR
LineNo: 7			Lexeme: =				Token: ASSIGN
LineNo: 7			Lexeme: 'g'				Token: CCONST
LineNo: 7			Lexeme: ;				Token: SEMIDEM
LineNo: 8			Lexeme: var				Token: KEYWORD_VAR
LineNo: 8			Lexeme: boss				Token: ID
LineNo: 8			Lexeme: string				Token: KEYWORD_STRING
LineNo: 8			Lexeme: =				Token: ASSIGN
LineNo: 8			Lexeme: "bossman"				Token: STRING
LineNo: 9			Lexeme: var				Token: KEYWORD_VAR
LineNo: 9			Lexeme: arr[]				Token: ARRAY
LineNo: 9			Lexeme: int				Token: KEYWORD_INT
LineNo: 9			Lexeme: =				Token: ASSIGN
LineNo: 9			Lexeme: {				Token: LBRACEDEM
LineNo: 9			Lexeme: 1				Token: ICONST
LineNo: 9			Lexeme: ,				Token: COMMA
LineNo: 9			Lexeme: 2				Token: ICONST
LineNo: 9			Lexeme: ,				Token: COMMA
LineNo: 9			Lexeme: 3				Token: ICONST
LineNo: 9			Lexeme: ,				Token: COMMA
LineNo: 9			Lexeme: 4				Token: ICONST
LineNo: 9			Lexeme: ,				Token: COMMA
LineNo: 9			Lexeme: 5				Token: ICONST
LineNo: 9			Lexeme: ,				Token: COMMA
LineNo: 9			Lexeme: 6				Token: ICONST
LineNo: 9			Lexeme: ,				Token: COMMA
LineNo: 9			Lexeme: 7				Token: ICONST
LineNo: 9			Lexeme: ,				Token: COMMA
LineNo: 9			Lexeme: 8				Token: ICONST
LineNo: 9			Lexeme: }				Token: RBRACEDEM
LineNo: 9			Lexeme: ;				Token: SEMIDEM
LineNo: 10			Lexeme: var				Token: KEYWORD_VAR
LineNo: 10			Lexeme: isCorrect				Token: ID
LineNo: 10			Lexeme: bool				Token: KEYWORD_BOOL
LineNo: 10			Lexeme: =				Token: ASSIGN
LineNo: 10			Lexeme: false				Token: RESWORD_FALSE
LineNo: 10			Lexeme: ;				Token: SEMIDEM
LineNo: 11			Lexeme: var				Token: KEYWORD_VAR
LineNo: 11			Lexeme: isWrong				Token: ID
LineNo: 11			Lexeme: boolean				Token: KEYWORD_BOOL
LineNo: 11			Lexeme: =				Token: ASSIGN
LineNo: 11			Lexeme: true				Token: RESWORD_TRUE
LineNo: 11			Lexeme: ;				Token: SEMIDEM
LineNo: 12			Lexeme: var				Token: KEYWORD_VAR
LineNo: 12			Lexeme: 1num				Token: INVALID IDENTIFIER
LineNo: 12			Lexeme: int				Token: KEYWORD_INT
LineNo: 12			Lexeme: ;				Token: SEMIDEM
LineNo: 13			Lexeme: var				Token: KEYWORD_VAR
LineNo: 13			Lexeme: #ltr				Token: INVALID IDENTIFIER
LineNo: 13			Lexeme: string				Token: KEYWORD_STRING
LineNo: 13			Lexeme: ;				Token: SEMIDEM
LineNo: 14			Lexeme: var				Token: KEYWORD_VAR
LineNo: 14			Lexeme: test				Token: ID
LineNo: 14			Lexeme: bool				Token: KEYWORD_BOOL
LineNo: 14			Lexeme: =				Token: ASSIGN
LineNo: 14			Lexeme: a				Token: ID
LineNo: 14			Lexeme: ==				Token: EQUOP
LineNo: 14			Lexeme: b				Token: ID
LineNo: 14			Lexeme: ;				Token: SEMIDEM

Line is commented at line 15

LineNo: 16			Lexeme: \t				Token: INVALID IDENTIFIER

Start of comment from line 18
Ends to line 23


Line is commented at line 24

LineNo: 26			Lexeme: for				Token: KEYWORD_FOR
LineNo: 26			Lexeme: (				Token: LPAREN
LineNo: 26			Lexeme: var				Token: KEYWORD_VAR
LineNo: 26			Lexeme: i				Token: ID
LineNo: 26			Lexeme: int				Token: KEYWORD_INT
LineNo: 26			Lexeme: =				Token: ASSIGN
LineNo: 26			Lexeme: 0				Token: ICONST
LineNo: 26			Lexeme: ;				Token: SEMIDEM
LineNo: 26			Lexeme: 8				Token: ICONST
LineNo: 26			Lexeme: >				Token: GTHANOP
LineNo: 26			Lexeme: i				Token: ID
LineNo: 26			Lexeme: ;				Token: SEMIDEM
LineNo: 26			Lexeme: i				Token: ID
LineNo: 26			Lexeme: ++				Token: IINCROP
LineNo: 26			Lexeme: )				Token: RPAREN
LineNo: 27			Lexeme: {				Token: LBRACEDEM
LineNo: 29			Lexeme: ttl				Token: ID
LineNo: 29			Lexeme: =				Token: ASSIGN
LineNo: 29			Lexeme: a				Token: ID
LineNo: 29			Lexeme: +				Token: ADDOP
LineNo: 29			Lexeme: i				Token: ID
LineNo: 29			Lexeme: ;				Token: SEMIDEM
LineNo: 30			Lexeme: ttl				Token: ID
LineNo: 30			Lexeme: =				Token: ASSIGN
LineNo: 30			Lexeme: b				Token: ID
LineNo: 30			Lexeme: -				Token: MINOP
LineNo: 30			Lexeme: i				Token: ID
LineNo: 30			Lexeme: ;				Token: SEMIDEM
LineNo: 31			Lexeme: ttl				Token: ID
LineNo: 31			Lexeme: =				Token: ASSIGN
LineNo: 31			Lexeme: ttl				Token: ID
LineNo: 31			Lexeme: *				Token: MULOP
LineNo: 31			Lexeme: b				Token: ID
LineNo: 31			Lexeme: ;				Token: SEMIDEM
LineNo: 32			Lexeme: ttl				Token: ID
LineNo: 32			Lexeme: =				Token: ASSIGN
LineNo: 32			Lexeme: a				Token: ID
LineNo: 32			Lexeme: /				Token: DIVOP
LineNo: 32			Lexeme: ttl				Token: ID
LineNo: 32			Lexeme: ;				Token: SEMIDEM
LineNo: 33			Lexeme: ttl				Token: ID
LineNo: 33			Lexeme: =				Token: ASSIGN
LineNo: 33			Lexeme: a				Token: ID
LineNo: 33			Lexeme: %				Token: MODOP
LineNo: 33			Lexeme: i				Token: ID
LineNo: 33			Lexeme: ;				Token: SEMIDEM
LineNo: 34			Lexeme: b				Token: ID
LineNo: 34			Lexeme: --				Token: DINCROP
LineNo: 34			Lexeme: ;				Token: SEMIDEM
LineNo: 35			Lexeme: ttl				Token: ID
LineNo: 35			Lexeme: =				Token: ASSIGN
LineNo: 35			Lexeme: 2				Token: ICONST
LineNo: 35			Lexeme: *				Token: MULOP
LineNo: 35			Lexeme: i				Token: ID
LineNo: 35			Lexeme: **				Token: EXPOP
LineNo: 35			Lexeme: 2				Token: ICONST
LineNo: 35			Lexeme: ;				Token: SEMIDEM
LineNo: 36			Lexeme: }				Token: RBRACEDEM
LineNo: 38			Lexeme: var				Token: KEYWORD_VAR
LineNo: 38			Lexeme: NUM				Token: ID
LineNo: 38			Lexeme: int				Token: KEYWORD_INT
LineNo: 38			Lexeme: =				Token: ASSIGN
LineNo: 38			Lexeme: 15				Token: ICONST
LineNo: 38			Lexeme: ;				Token: SEMIDEM
LineNo: 40			Lexeme: set				Token: ID
LineNo: 40			Lexeme: (				Token: LPAREN
LineNo: 40			Lexeme: NUM				Token: ID
LineNo: 40			Lexeme: )				Token: RPAREN
LineNo: 40			Lexeme: ;				Token: SEMIDEM
LineNo: 41			Lexeme: insurance				Token: ID
LineNo: 41			Lexeme: (				Token: LPAREN
LineNo: 41			Lexeme: )				Token: RPAREN
LineNo: 41			Lexeme: ;				Token: SEMIDEM
LineNo: 43			Lexeme: return				Token: KEYWORD_RETURN
LineNo: 43			Lexeme: 0				Token: ICONST
LineNo: 43			Lexeme: ;				Token: SEMIDEM
LineNo: 44			Lexeme: }				Token: RBRACEDEM
LineNo: 46			Lexeme: fn				Token: KEYWORD_FUNCTION
LineNo: 46			Lexeme: set				Token: ID
LineNo: 46			Lexeme: (				Token: LPAREN
LineNo: 46			Lexeme: num				Token: ID
LineNo: 46			Lexeme: :				Token: COLON
LineNo: 46			Lexeme: int				Token: KEYWORD_INT
LineNo: 46			Lexeme: )				Token: RPAREN
LineNo: 46			Lexeme: void				Token: KEYWORD_VOID
LineNo: 46			Lexeme: {				Token: LBRACEDEM
LineNo: 47			Lexeme: var				Token: KEYWORD_VAR
LineNo: 47			Lexeme: i				Token: ID
LineNo: 47			Lexeme: int				Token: KEYWORD_INT
LineNo: 47			Lexeme: =				Token: ASSIGN
LineNo: 47			Lexeme: 0				Token: ICONST
LineNo: 47			Lexeme: ;				Token: SEMIDEM
LineNo: 48			Lexeme: dotimes				Token: KEYWORD_DOTIMES
LineNo: 48			Lexeme: (				Token: LPAREN
LineNo: 48			Lexeme: i				Token: ID
LineNo: 48			Lexeme: num				Token: ID
LineNo: 48			Lexeme: )				Token: RPAREN
LineNo: 48			Lexeme: {				Token: LBRACEDEM
LineNo: 49			Lexeme: if				Token: KEYWORD_IF
LineNo: 49			Lexeme: (				Token: LPAREN
LineNo: 49			Lexeme: i				Token: ID
LineNo: 49			Lexeme: <				Token: LTHANOP
LineNo: 49			Lexeme: 5				Token: ICONST
LineNo: 49			Lexeme: ||				Token: OROP
LineNo: 49			Lexeme: i				Token: ID
LineNo: 49			Lexeme: >				Token: GTHANOP
LineNo: 49			Lexeme: 10				Token: ICONST
LineNo: 49			Lexeme: )				Token: RPAREN
LineNo: 49			Lexeme: {				Token: LBRACEDEM
LineNo: 50			Lexeme: print				Token: OUTPUT_STATE
LineNo: 50			Lexeme: (				Token: LPAREN
LineNo: 50			Lexeme: "First set: $i"				Token: STRING
LineNo: 50			Lexeme: )				Token: RPAREN
LineNo: 50			Lexeme: ;				Token: SEMIDEM
LineNo: 51			Lexeme: }				Token: RBRACEDEM
LineNo: 52			Lexeme: else				Token: KEYWORD_ELSE
LineNo: 52			Lexeme: {				Token: LBRACEDEM
LineNo: 53			Lexeme: print				Token: OUTPUT_STATE
LineNo: 53			Lexeme: (				Token: LPAREN
LineNo: 53			Lexeme: "Second set: $i"				Token: STRING
LineNo: 53			Lexeme: )				Token: RPAREN
LineNo: 54			Lexeme: }				Token: RBRACEDEM
LineNo: 55			Lexeme: }				Token: RBRACEDEM
LineNo: 56			Lexeme: }				Token: RBRACEDEM
LineNo: 58			Lexeme: fn				Token: KEYWORD_FUNCTION
LineNo: 58			Lexeme: insurance				Token: ID
LineNo: 58			Lexeme: (				Token: LPAREN
LineNo: 58			Lexeme: )				Token: RPAREN
LineNo: 58			Lexeme: void				Token: KEYWORD_VOID
LineNo: 58			Lexeme: {				Token: LBRACEDEM
LineNo: 59			Lexeme: var				Token: KEYWORD_VAR
LineNo: 59			Lexeme: condit				Token: ID
LineNo: 59			Lexeme: bool				Token: KEYWORD_BOOL
LineNo: 59			Lexeme: =				Token: ASSIGN
LineNo: 59			Lexeme: false				Token: RESWORD_FALSE
LineNo: 59			Lexeme: ;				Token: SEMIDEM
LineNo: 60			Lexeme: println				Token: OUTPUTNL_STATE
LineNo: 60			Lexeme: (				Token: LPAREN
LineNo: 60			Lexeme: "Theyre taking the money!"				Token: STRING
LineNo: 60			Lexeme: )				Token: RPAREN
LineNo: 60			Lexeme: ;				Token: SEMIDEM
LineNo: 62			Lexeme: unless				Token: KEYWORD_UNLESS
LineNo: 62			Lexeme: (				Token: LPAREN
LineNo: 62			Lexeme: condit				Token: ID
LineNo: 62			Lexeme: )				Token: RPAREN
LineNo: 62			Lexeme: {				Token: LBRACEDEM
LineNo: 63			Lexeme: println				Token: OUTPUTNL_STATE
LineNo: 63			Lexeme: (				Token: LPAREN
LineNo: 63			Lexeme: "Unless we take it first"				Token: STRING
LineNo: 63			Lexeme: )				Token: RPAREN
LineNo: 63			Lexeme: ;				Token: SEMIDEM
LineNo: 64			Lexeme: }				Token: RBRACEDEM
LineNo: 65			Lexeme: else				Token: KEYWORD_ELSE
LineNo: 65			Lexeme: {				Token: LBRACEDEM
LineNo: 66			Lexeme: println				Token: OUTPUTNL_STATE
LineNo: 66			Lexeme: (				Token: LPAREN
LineNo: 66			Lexeme: "Oh! Anyways!"				Token: STRING
LineNo: 66			Lexeme: )				Token: RPAREN
LineNo: 66			Lexeme: ;				Token: SEMIDEM
LineNo: 67			Lexeme: }				Token: RBRACEDEM
LineNo: 69			Lexeme: }				Token: RBRACEDEM



Total Tokens = 256